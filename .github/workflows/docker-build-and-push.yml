on:
  workflow_call:
    inputs:
      registry:
        required: false
        type: string
        default: docker.io
      context:
        required: false
        type: string
        default: .
      repository-name:
        required: false
        type: string
        default: tfrank773 
      image-name:
        required: true
        type: string
      manifest:
        required: false
        type: string
        default: helm/values.yaml

      platforms:
        required: false
        type: string
        default: "linux/amd64,linux/arm64"

jobs:
  buildAndPublishImage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: ${{ inputs.repository-name }}/${{ inputs.image-name }}

          # generate Docker tags based on the following events/attributes
          #  type=schedule
          #  type=ref,event=branch
          #  type=ref,event=pr
          #  type=semver,pattern={{version}}
          #  type=semver,pattern={{major}}.{{minor}}
          #  type=semver,pattern={{major}}
          tags: type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: environment
        run: env

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_SECRET }}
        
      - name: Build and push
        id: build
        uses: docker/build-push-action@v3
        with:
          context: ${{ inputs.context }}
          platforms: ${{ inputs.platforms }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Get first Tag
        id: firsttag
        run: |
          tags=($(echo "${{ steps.meta.outputs.tags }}" | tr ',' '\n'))
          echo "tag=${tags[0]}" >> $GITHUB_OUTPUT

      - name: Update Helm tags
        uses: mikefarah/yq@master
        with:
          cmd: yq eval '(.features[] | select(has("name")) | select(.name == "${{ inputs.image-name }}")).image = "${{ steps.firsttag.outputs.tag }}"' -i ${{ inputs.manifest }}

      - name: Check code in and push
        uses: EndBug/add-and-commit@v8
        with:
          author_name: franktylerva
          author_email: franktylerva@gmail.com
          message: 'Updated helm/values.yaml file.'
          add: '${{ inputs.manifest }}'